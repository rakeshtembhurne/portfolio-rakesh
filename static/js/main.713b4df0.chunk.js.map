{"version":3,"sources":["layout/Navbar.js","layout/Footer.js","layout/CuriosityMeter.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","react_router_dom","className","src","alt","href","target","rel","to","Footer","id","class","CuriosityMeter","title","Home","lazy","__webpack_require__","e","then","bind","About","Contact","App","Fragment","layout_Navbar","react","fallback","react_router","exact","path","component","layout_Footer","layout_CuriosityMeter","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.713b4df0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, BrowserRouter as Router } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <Router>\n      <nav className=\"columns is-mobile is-centered has-text-centered is-multiline\">\n        <h1 className=\"column is-full title is-hidden-desktop is-hidden-tablet\">Rakesh Tembhurne</h1>\n        <p className=\"column is-full is-hidden-desktop is-hidden-tablet is-128x128\">\n          <img className=\"is-rounded animated bounce\" src=\"https://avatars2.githubusercontent.com/u/1090611?s=100\" alt=\"Rakesh Tembhurne\" />\n        </p>\n        <p className=\"column is-half-mobile\">\n          <a href=\"/about\" className=\"link button is-outlined is-link animated slideInRight delay-2s\">About</a>\n        </p>\n        <p className=\"column is-half-mobile\">\n          <a href=\"https://rakesh.tembhurne.com\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link button is-outlined is-link animated slideInRight delay-1s\">Blog</a>\n        </p>\n        <p className=\"column is-hidden-mobile\">\n          <Link to=\"/\">\n            <img className=\"is-rounded\" src=\"https://avatars2.githubusercontent.com/u/1090611?s=100\" alt=\"Rakesh Tembhurne\" />\n          </Link>\n        </p>\n        <p className=\"column is-half-mobile\">\n          <a href=\"https://github.com/rakeshtembhurne\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link button is-outlined is-link animated slideInLeft delay-1s\">Portfolio</a>\n        </p>\n        <p className=\"column is-half-mobile\">\n          <a href=\"/contact\" className=\"link button is-outlined is-link animated slideInLeft delay-2s\">Contact</a>\n        </p>\n      </nav>\n    </Router>\n  );\n}\n\nexport default Navbar;","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div className=\"columns is-centered is-mobile\" id=\"social-icon\" >\n      <div className=\"column is-narrow\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/tembhurnerakesh\"><i class=\"animated slideInDown fab fa-twitter\"></i></a>\n      </div>\n      <div className=\"column is-narrow\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/rakeshtembhurne\"><i class=\"animated slideInDown fab fa-github\"></i></a>\n      </div>\n      <div className=\"column is-narrow\">\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/rakeshtembhurne/\"><i class=\"animated slideInDown fab fa-linkedin-in\"></i></a>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default Footer;","import React from 'react';\n\nfunction CuriosityMeter() {\n  return (\n    <div id=\"curiosity-container\" title=\"Curiosity meter\" className=\"toast-bottom-left\">\n      <span className=\"animated rubberBand delay-4s far fa-star has-text-warning\"></span>\n      <span className=\"animated rubberBand delay-4s fas fa-star-half-alt has-text-warning\"></span>\n      <span className=\"animated rubberBand delay-4s fas fa-star has-text-warning\"></span>\n      <span className=\"animated rubberBand delay-4s fas fa-star has-text-warning\"></span>\n      <span className=\"animated rubberBand delay-4s fas fa-star has-text-warning\"></span>\n    </div>\n  );\n}\n\nexport default CuriosityMeter;","import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './layout/Navbar';\nimport Footer from './layout/Footer';\nimport CuriosityMeter from './layout/CuriosityMeter';\nimport './App.css';\n\nconst Home = lazy(() => import('./Home'));\nconst About = lazy(() => import('./About'));\nconst Contact = lazy(() => import('./Contact'));\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <section className=\"section has-text-centered\">\n          <Navbar />\n          <Router>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact\" component={Contact} />\n              </Switch>\n            </Suspense>\n          </Router>\n          <hr/>\n          <Footer />\n        </section>\n      </div>\n      <CuriosityMeter />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}